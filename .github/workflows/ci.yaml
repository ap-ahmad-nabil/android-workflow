name: Generated APK AAB (Download)

env:
  # The name of the main module repository
  main_project_module: app

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment
        options:
          - sit
          - uat
          - prod

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Run Tests Build
      - name: Run gradle tests
        run: ./gradlew test

      # Run Build Project
      - name: Build gradle project
        run: ./gradlew build

      # Create APK Debug
      - name: Build apk debug project (APK) - ${{ env.main_project_module }} module
        run: ./gradlew assembleDebug

      # Create APK Release
      - name: Build apk release project (APK) - ${{ env.main_project_module }} module
        run: ./gradlew assemble

      # Create Bundle AAB Release
      # Noted for main module build [main_project_module]:bundleRelease
      - name: Build app bundle release (AAB) - ${{ env.main_project_module }} module
        run: ./gradlew ${{ env.main_project_module }}:bundleRelease

      # Download Artifact Build
      # Noted For Output [main_project_module]/build/outputs/apk/${{ github.event.inputs.environment }}/debug/
      - name: Download APK Debug - ${{ env.repository_name }}
        uses: actions/download-artifact@v3
        with:
          path: ${{ env.main_project_module }}/build/outputs/apk/${{ github.event.inputs.environment }}/debug/

      - name: Display APK Debug - ${{ env.repository_name }} structure of downloaded files
        run: ls -R
        working-directory: ${{ env.main_project_module }}/build/outputs/apk/${{ github.event.inputs.environment }}/debug/

      # Noted For Output [main_project_module]/build/outputs/apk/${{ github.event.inputs.environment }}/release/
      - name: Download APK Release - ${{ env.repository_name }}
        uses: actions/download-artifact@v3
        with:
          path: ${{ env.main_project_module }}/build/outputs/apk/${{ github.event.inputs.environment }}/release/

      - name: Display APK Release - ${{ env.repository_name }} structure of downloaded files
        run: ls -R
        working-directory: ${{ env.main_project_module }}/build/outputs/apk/${{ github.event.inputs.environment }}/release/

      # Noted For Output [main_project_module]/build/outputs/bundle/release/
      - name: Download AAB (App Bundle) Release - ${{ env.repository_name }}
        uses: actions/download-artifact@v3
        with:
          path: ${{ env.main_project_module }}/build/outputs/bundle/release/

      - name: Display AAB (App Bundle) Release - ${{ env.repository_name }} structure of downloaded files
        run: ls -R
        working-directory: ${{ env.main_project_module }}/build/outputs/bundle/${{ github.event.inputs.environment }}/release/